<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.2 on linux)" generated="20200912 08:43:39.673" rpa="false">
<suite id="s1" name="Tests" source="/home/hungt/repos/robotframework/api-example/Tests">
<suite id="s1-s1" name="Contract Driven" source="/home/hungt/repos/robotframework/api-example/Tests/contract_driven.robot">
<test id="s1-s1-t1" name="Valid user">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/users/1</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:39.870" endtime="20200912 08:43:40.072"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:39.870" endtime="20200912 08:43:40.072" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="New user">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/users</arg>
<arg>${EXECDIR}/json_repository/user.json</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:40.073" endtime="20200912 08:43:40.711"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:40.072" endtime="20200912 08:43:40.712" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Edit user">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/users/1</arg>
<arg>${EXECDIR}/json_repository/user.json</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:40.714" endtime="20200912 08:43:41.361"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:40.712" endtime="20200912 08:43:41.362" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Edit email">
<kw name="Patch" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PATCH request to the endpoint.*</doc>
<arguments>
<arg>/users/2</arg>
<arg>{ "email": "ismo.aro@robotframework.dev" }</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:41.364" endtime="20200912 08:43:42.218"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:41.363" endtime="20200912 08:43:42.219" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Delete">
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/users/10</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:42.221" endtime="20200912 08:43:42.963"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$</arg>
</arguments>
<msg timestamp="20200912 08:43:42.965" level="INFO">
{}</msg>
<status status="PASS" starttime="20200912 08:43:42.964" endtime="20200912 08:43:42.981"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:42.220" endtime="20200912 08:43:42.981" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Valid users">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/users</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:42.983" endtime="20200912 08:43:43.704"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:42.982" endtime="20200912 08:43:43.704" critical="yes"></status>
</test>
<status status="PASS" starttime="20200912 08:43:39.694" endtime="20200912 08:43:43.706"></status>
</suite>
<suite id="s1-s2" name="Model Based" source="/home/hungt/repos/robotframework/api-example/Tests/model_based.robot">
<kw name="Expect Response Body" library="REST" type="setup">
<tags>
<tag>expectations</tag>
</tags>
<doc>*Updates the schema to validate the response body properties.*</doc>
<arguments>
<arg>${EXECDIR}/json_repository/model.json</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:43.717" endtime="20200912 08:43:43.718"></status>
</kw>
<test id="s1-s2-t1" name="Valid user">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/users/1</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:43.718" endtime="20200912 08:43:43.887"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.email</arg>
<arg>format=email</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:43.888" endtime="20200912 08:43:43.941"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:43.718" endtime="20200912 08:43:43.941" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="New user">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/users</arg>
<arg>${EXECDIR}/json_repository/user.json</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:43.942" endtime="20200912 08:43:44.603"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:43.941" endtime="20200912 08:43:44.604" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Edit user">
<kw name="Put" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PUT request to the endpoint.*</doc>
<arguments>
<arg>/users/1</arg>
<arg>${EXECDIR}/json_repository/user.json</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:44.606" endtime="20200912 08:43:45.526"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:44.605" endtime="20200912 08:43:45.526" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Edit email">
<kw name="Patch" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PATCH request to the endpoint.*</doc>
<arguments>
<arg>/users/2</arg>
<arg>{ "email": "ismo.aro@robotframework.dev" }</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:45.529" endtime="20200912 08:43:46.177"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:45.527" endtime="20200912 08:43:46.178" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Delete">
<kw name="Expect Response Body" library="REST">
<tags>
<tag>expectations</tag>
</tags>
<doc>*Updates the schema to validate the response body properties.*</doc>
<arguments>
<arg>{ "required": [] }</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:46.180" endtime="20200912 08:43:46.181"></status>
</kw>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/users/10</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:46.181" endtime="20200912 08:43:47.033"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:46.179" endtime="20200912 08:43:47.033" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Valid users">
<kw name="Clear Expectations" library="REST">
<tags>
<tag>expectations</tag>
</tags>
<doc>*Resets the expectations for both request and response.*</doc>
<status status="PASS" starttime="20200912 08:43:47.035" endtime="20200912 08:43:47.035"></status>
</kw>
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/users</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:47.035" endtime="20200912 08:43:47.206"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>$</arg>
<arg>minItems=1</arg>
<arg>maxItems=10</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:47.207" endtime="20200912 08:43:47.215"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>$[*].id</arg>
<arg>maximum=10</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:47.215" endtime="20200912 08:43:47.253"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:47.034" endtime="20200912 08:43:47.253" critical="yes"></status>
</test>
<status status="PASS" starttime="20200912 08:43:43.709" endtime="20200912 08:43:47.254"></status>
</suite>
<suite id="s1-s3" name="Requests Lib" source="/home/hungt/repos/robotframework/api-example/Tests/requests_lib.robot">
<kw name="Create Session" library="req" type="setup">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>typicode</arg>
<arg>https://jsonplaceholder.typicode.com</arg>
</arguments>
<msg timestamp="20200912 08:43:47.271" level="INFO">Creating Session using : alias=typicode, url=https://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200912 08:43:47.270" endtime="20200912 08:43:47.271"></status>
</kw>
<test id="s1-s3-t1" name="requests: Should have a name and belong to a company with a slogan">
<kw name="Get Request" library="req">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>typicode</arg>
<arg>/users/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200912 08:43:47.427" level="INFO">GET Request : url=https://jsonplaceholder.typicode.com/users/1 
 path_url=/users/1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200912 08:43:47.428" level="INFO">GET Response : url=https://jsonplaceholder.typicode.com/users/1 
 status=200, reason=OK 
 body={
  "id": 1,
  "name": "Leanne Graham",
  "username": "Bret",
  "email": "Sincere@april.biz",
  "address": {
    "street": "Kulas Light",
    "suite": "Apt. 556",
    "city": "Gwenborough",
    "zipcode": "92998-3874",
    "geo": {
      "lat": "-37.3159",
      "lng": "81.1496"
    }
  },
  "phone": "1-770-736-8031 x56442",
  "website": "hildegard.org",
  "company": {
    "name": "Romaguera-Crona",
    "catchPhrase": "Multi-layered client-server neural-net",
    "bs": "harness real-time e-markets"
  }
} 
 </msg>
<msg timestamp="20200912 08:43:47.429" level="INFO">/home/hungt/repos/robotframework/api-example/venv/lib/python3.8/site-packages/urllib3/connectionpool.py:981: InsecureRequestWarning: Unverified HTTPS request is being made to host 'jsonplaceholder.typicode.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200912 08:43:47.430" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200912 08:43:47.271" endtime="20200912 08:43:47.430"></status>
</kw>
<kw name="Reponse Status Code Should Be">
<arguments>
<arg>${resp}</arg>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_code}</arg>
</arguments>
<msg timestamp="20200912 08:43:47.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200912 08:43:47.431" endtime="20200912 08:43:47.432"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:47.430" endtime="20200912 08:43:47.432"></status>
</kw>
<kw name="Reponse Json Field Value Should Be">
<arguments>
<arg>${resp}</arg>
<arg>name</arg>
<arg>Leanne Graham</arg>
</arguments>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>${json_field_name}</arg>
</arguments>
<assign>
<var>${extract_value}</var>
</assign>
<msg timestamp="20200912 08:43:47.435" level="INFO">${extract_value} = Leanne Graham</msg>
<status status="PASS" starttime="20200912 08:43:47.434" endtime="20200912 08:43:47.435"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${extract_value}</arg>
<arg>${expected_value}</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:47.435" endtime="20200912 08:43:47.435"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:47.433" endtime="20200912 08:43:47.436"></status>
</kw>
<kw name="Reponse Json Object's Field Value Should Be">
<arguments>
<arg>${resp}</arg>
<arg>company</arg>
<arg>catchPhrase</arg>
<arg>Multi-layered client-server neural-net</arg>
</arguments>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>${json_object_name}</arg>
</arguments>
<assign>
<var>${object_value}</var>
</assign>
<msg timestamp="20200912 08:43:47.438" level="INFO">${object_value} = {'name': 'Romaguera-Crona', 'catchPhrase': 'Multi-layered client-server neural-net', 'bs': 'harness real-time e-markets'}</msg>
<status status="PASS" starttime="20200912 08:43:47.437" endtime="20200912 08:43:47.438"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${object_value}</arg>
<arg>${object_field_name}</arg>
</arguments>
<assign>
<var>${object_field_value}</var>
</assign>
<msg timestamp="20200912 08:43:47.439" level="INFO">${object_field_value} = Multi-layered client-server neural-net</msg>
<status status="PASS" starttime="20200912 08:43:47.438" endtime="20200912 08:43:47.439"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${object_field_value}</arg>
<arg>${expected_value}</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:47.439" endtime="20200912 08:43:47.440"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:47.436" endtime="20200912 08:43:47.440"></status>
</kw>
<kw name="Dumps" library="json">
<doc>Serialize ``obj`` to a JSON formatted ``str``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>indent=${4}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200912 08:43:47.441" level="INFO">${json} = {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
        "street": "Kulas Light",
        "suite": "Apt. 556",
        "city": "Gw...</msg>
<status status="PASS" starttime="20200912 08:43:47.440" endtime="20200912 08:43:47.441"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:47.442" endtime="20200912 08:43:47.442"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:47.271" endtime="20200912 08:43:47.443" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="req" type="teardown">
<doc>Removes all the session objects</doc>
<msg timestamp="20200912 08:43:47.444" level="INFO">Delete All Sessions</msg>
<status status="PASS" starttime="20200912 08:43:47.443" endtime="20200912 08:43:47.444"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:47.255" endtime="20200912 08:43:47.444"></status>
</suite>
<suite id="s1-s4" name="Rest Instance Lib" source="/home/hungt/repos/robotframework/api-example/Tests/rest_instance_lib.robot">
<test id="s1-s4-t1" name="RESTinstance: Should have a name and belong to a company with a slogan">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/users/1</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:47.450" endtime="20200912 08:43:48.169"></status>
</kw>
<kw name="Reponse Status Code Should Be">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${expected_code}</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:48.171" endtime="20200912 08:43:48.177"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:48.169" endtime="20200912 08:43:48.178"></status>
</kw>
<kw name="Reponse Field Value Should Be">
<arguments>
<arg>$.name</arg>
<arg>Leanne Graham</arg>
</arguments>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>${json_path}</arg>
<arg>${expected_value}</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:48.180" endtime="20200912 08:43:48.249"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:48.178" endtime="20200912 08:43:48.250"></status>
</kw>
<kw name="Reponse Field Value Should Be">
<arguments>
<arg>$..catchPhrase</arg>
<arg>Multi-layered client-server neural-net</arg>
</arguments>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>${json_path}</arg>
<arg>${expected_value}</arg>
</arguments>
<status status="PASS" starttime="20200912 08:43:48.250" endtime="20200912 08:43:48.273"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:48.250" endtime="20200912 08:43:48.273"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$</arg>
</arguments>
<msg timestamp="20200912 08:43:48.273" level="INFO">
{
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
        "street": "Kulas Light",
        "suite": "Apt. 556",
        "city": "Gwenborough",
        "zipcode": "92998-3874",
        "geo": {
            "lat": "-37.3159",
            "lng": "81.1496"
        }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
        "name": "Romaguera-Crona",
        "catchPhrase": "Multi-layered client-server neural-net",
        "bs": "harness real-time e-markets"
    }
}</msg>
<status status="PASS" starttime="20200912 08:43:48.273" endtime="20200912 08:43:48.274"></status>
</kw>
<status status="PASS" starttime="20200912 08:43:47.449" endtime="20200912 08:43:48.274" critical="yes"></status>
</test>
<status status="PASS" starttime="20200912 08:43:47.445" endtime="20200912 08:43:48.275"></status>
</suite>
<status status="PASS" starttime="20200912 08:43:39.674" endtime="20200912 08:43:48.277"></status>
</suite>
<statistics>
<total>
<stat pass="14" fail="0">Critical Tests</stat>
<stat pass="14" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="6" fail="0" id="s1-s1" name="Contract Driven">Tests.Contract Driven</stat>
<stat pass="6" fail="0" id="s1-s2" name="Model Based">Tests.Model Based</stat>
<stat pass="1" fail="0" id="s1-s3" name="Requests Lib">Tests.Requests Lib</stat>
<stat pass="1" fail="0" id="s1-s4" name="Rest Instance Lib">Tests.Rest Instance Lib</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
